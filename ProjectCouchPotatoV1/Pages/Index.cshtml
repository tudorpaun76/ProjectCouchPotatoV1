@page
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model ProjectCouchPotatoV1.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
}

<script src="/lib/jquery-3.7.1.min.js"></script>
<script src="/lib/vue3.js"></script>
<script src="/lib/axios.min.js"></script>
<script src="/lib/bootstrap.bundle.min.js"></script>
<link href="/lib/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="/styles/Index.min.css">


@if (SignInManager.IsSignedIn(User))
{
    <div id="app" class="container mt-4">
        <div>
            @*Functional Cards*@
            <div class="row mt-2">
                @*Review*@
                <div class="col scroll">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title text-center">
                                Reviews
                                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#exampleModal" style="float: right;">
                                    <img src="svg/plus.svg">
                                </button>
                            </h3>
                            <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modalContent modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="exampleModalLabel">Search movie to add a review</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="reviewSearchForm" class="form-inline" method="get" action="/movie/searchreview">
                                                <div class="form-group">

                                                    @*FIX SEARCHQUERY MODAL THEY SHOULD BE DIFFERENT*@
                                                    <input v-model="searchQuery" type="text" class="form-control" name="name" id="movieName" placeholder="Search future adventures..." autocomplete="off" required>
                                                    <div class="autoComplete list-group">
                                                        <button class="list-group-item" v-for="movie in searchResults" :key="movie.id" v-on:click="populateSearchField(movie.title)">
                                                            <div class="movie-info">
                                                                <img class="searchPoster" v-bind:src="'https://image.tmdb.org/t/p/original' + movie.poster_path" alt="Movie Poster">
                                                                <span class="movie-title">{{ movie.title }}</span>
                                                            </div>
                                                        </button>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="container" v-for="movie in movies" :key="movie.id">
                                <div class="mb-3">
                                    <div>
                                        <div class="row">
                                            <div class="col">
                                                <img class="poster" v-bind:src="'https://image.tmdb.org/t/p/original' + movie.poster_path" alt="Movie Poster">
                                            </div>
                                            <div class="col align-self-center">
                                                <ul class="list-group list-group-flush">
                                                    <li class="list-group-item">{{ movie.title }}</li>
                                                </ul>
                                            </div>
                                            <div class="col align-self-center">
                                                <button type="button" class="eyeBtn btn" v-on:click="openReview(movie)">
                                                    <img src="svg/eye.svg">
                                                </button>
                                            </div>
                                        </div>
                                    </div>

                                    <div v-if="selectedMovie && selectedMovie.id === movie.id" class="custom-modal">
                                        <div class="modal fade modal-lg" id="reviewModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modalContent modal-content">
                                                    <div class="modal-header"><strong>Review:</strong></div>
                                                    <div class="modal-body">
                                                        <div class="modal-dialog modal-dialog-scrollable">
                                                            <p class="text-left">{{ selectedMovie.reviewText }}</p>
                                                        </div>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn" v-on:click="deleteReview(selectedMovie.id)"><img src="svg/trash.svg"></button>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" v-on:click="closeModal()" aria-label="Close"></button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                @*Watchlist*@
                <div class="col scroll">
                    <div class="card">
                        <div class="card-body">
                            <h3 class="card-title text-center">
                                Watchlist
                                <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#watchlistModal" style="float: right;">
                                    <img src="svg/plus.svg">
                                </button>
                            </h3>
                            <div class="modal fade" id="watchlistModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modalContent modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="watchlistModalLabel">Search movie to add to watchlist</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            <form id="watchlistSearchForm" class="form-inline" method="get" action="/movie/searchwatchlist">
                                                <div class="form-group">
                                                    @*FIX SEARCHQUERY MODAL THEY SHOULD BE DIFFERENT*@
                                                    <input v-model="searchQuery" type="text" class="form-control" name="name" id="movieName" placeholder="Search future adventures..." autocomplete="off" required>
                                                    <div class="autoComplete list-group">
                                                        <button class="list-group-item" v-for="movie in searchResults" :key="movie.id" v-on:click="populateSearchField(movie.title)">
                                                            <div class="movie-info">
                                                                <img class="searchPoster" v-bind:src="'https://image.tmdb.org/t/p/original' + movie.poster_path" alt="Movie Poster">
                                                                <span class="movie-title">{{ movie.title }}</span>
                                                            </div>
                                                        </button>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="container" v-for="watchlist in watchlists" :key="watchlist.id">
                                    <div class="mb-3">
                                        <div>
                                            <div class="row">
                                                <div class="col">
                                                    <img class="poster" v-bind:src="'https://image.tmdb.org/t/p/original' + watchlist.poster_path" alt="Movie Poster">
                                                </div>
                                                <div class="col align-self-center">
                                                    <ul class="list-group list-group-flush">
                                                        <li class="list-group-item">{{ watchlist.title }}</li>
                                                    </ul>
                                                </div>
                                                <div class="col align-self-center">
                                                    <button type="button" class="eyeBtn btn" v-on:click="openWatchlist(watchlist)">
                                                        <img src="svg/eye.svg">
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                        <div v-if="selectedMovie && selectedMovie.id === watchlist.id" class="custom-modal">
                                            <div class="modal fade modal-lg" id="reviewModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div class="modalContent modal-content">
                                                        <div class="modal-header"><strong>Watchlist:</strong></div>
                                                        <div class="modal-body">
                                                            <div class="modal-dialog modal-dialog-scrollable">
                                                                <p class="text-left">{{ selectedMovie.title }}</p>
                                                                <p class="text-left">{{ selectedMovie.overview }}</p>
                                                            </div>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn" v-on:click="deleteWatchlist(selectedMovie.id)"><img src="svg/trash.svg"></button>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" v-on:click="closeModal()" aria-label="Close"></button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
}
else
{
    <div class="container">

        <div class="row">

            <div class="col">
                <p class="display-4">Welcome to Couch Potato! You're new movie diary.</p>
                <p class="display-4">Search for movies.</p>
                <p class="display-4"> Create watchlists, reviews and much more.</p>
            </div>
        </div>

    </div>
}



<script>
    const app = Vue.createApp({
        data() {
            return {
                movies: [],
                watchlists: [],
                selectedMovie: null,
                isEditing: false,
                searchQuery: '',
                searchResults: []
            };
        },
        watch: {
            searchQuery() {
                if (this.searchQuery.length > 2) {
                    this.fetchSearchResults();
                } else {
                    this.searchResults = [];
                }
            }
        },
        methods: {
            fetchSearchResults() {
                axios.get(`/movie/searchresult?name=${this.searchQuery}`)
                    .then(response => {
                        this.searchResults = response.data;
                    })
                    .catch(error => {
                        console.error('Error fetching search results:', error);
                    });
            },
            populateSearchField(movieTitle, context) {
                this.searchQuery = movieTitle;
                if (context === 'movie') {
                    document.getElementById('movieSearchForm').submit();
                } else if (context === 'searchreview') {
                    document.getElementById('reviewSearchForm').submit();
                } else if (context === 'searchwatchlist') {
                    document.getElementById('watchlistSearchForm').submit();
                }
                else {
                    console.error('Invalid context provided.');
                }
            },
            fetchMovies() {
                axios.get('/movie/getmovies')
                    .then(response => {
                        this.movies = response.data;
                    })
                    .catch(error => {
                        console.error('Error getting movies:', error);
                    });
            },
            fetchWatchlists() {
                axios.get('/movie/getwatchlist')
                    .then(response => {
                        console.log('Watchlist data:', response.data);
                        this.watchlists = response.data;
                    })
                    .catch(error => {
                        console.error('Error getting movies:', error);
                    });
            },
            openReview(movie) {
                this.selectedMovie = movie;
                this.$nextTick(() => {
                    $('#reviewModal').modal('show');
                });
            },
            openWatchlist(watchlist) {
                this.selectedMovie = watchlist;
                this.$nextTick(() => {
                    $('#reviewModal').modal('show');
                });
            },
            closeModal() {
                this.selectedMovie = null;
            },
            deleteReview(id) {
                axios.delete(`/movie/deletereview?movieid=${id}`)
                    .then(response => {
                        console.log('Deleted movie:', response.data);
                        this.movies = this.movies.filter(movie => movie.id !== id);
                        this.closeModal();
                        $('#reviewModal').modal('hide');
                    })
                    .catch(error => {
                        console.error('Error deleting movie:', error);
                    });
            },
            deleteWatchlist(id) {
                axios.delete(`/movie/deletewatchlist?movieid=${id}`)
                    .then(response => {
                        console.log('Deleted movie:', response.data);
                        this.watchlists = this.watchlists.filter(watchlist => watchlist.id !== id);
                        this.closeModal();
                        $('#reviewModal').modal('hide');
                    })
                    .catch(error => {
                        console.error('Error deleting movie:', error);
                    });
            },
        },
        mounted() {
            this.fetchMovies();
            this.fetchWatchlists();
            $('#reviewModal').modal({ show: true });
        }
    });

    app.mount('#app');

</script>




